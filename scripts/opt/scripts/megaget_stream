#!/bin/bash

PLAYER=vlc
MEGAGET=megaget

# Verificando se o executável megaget foi encontrado.
command -v $MEGAGET >/dev/null 2>&1 || { echo "O programa $MEGAGET não foi encontrado, instale o pacote megatools."; exit 1;}

# Verificando se o executável do player de vídeo foi encontrado.
command -v $PLAYER >/dev/null 2>&1 || { echo "O Player "\"$PLAYER\"" não foi encontrado."; exit 1; }

# Verificando se o executável do fzf foi encontrado
command -v fzf >/dev/null 2>&1 || { echo "O fzf não foi encontrado, instale o pacote fzf."; exit 1; }

# Iniciando o fzf (fuzzy-finder) para buscar o nome da vídeo no mega
function buscar_video_mega (){
  # MEGA_VIDEO=$(megals | grep -E ".mp4|.mkv|.flv|.rmvb|.avi" | grep "/Root/" | sed 's/\/Root\/*//' | fzf -i +s)
  MEGA_VIDEO=$(megals | grep -E ".mp4|.mkv|.flv|.rmvb|.avi" | grep "/Root/" | sed 's/\/Root\/*//' | fzf -i +s -m )

  if [[ -z $MEGA_VIDEO ]]; then
    echo "Nenhum vídeo foi selecionado.";
    exit 0;
  fi

  IFS=$'\n'
  for video in ${MEGA_VIDEO[@]};do
    unset PROC_ID
    echo "Começando stream do vídeo: \"$video\"";
    # Começa a baixar o vídeo e diretamente para o buffer do stdin
    $MEGAGET "/Root/$video" --path=- | ($PLAYER -) &

    # Pegar o ID do ultimo processo
    PROC_ID=$!

    # Enquanto o processo estiver executando, continue.
    while kill -0 "$PROC_ID" >/dev/null 2>&1; do
      sleep 1
    done

    # Fechando o processo do $MEGAGET, evitando que ele continue rodando em background
    kill "$(pidof $MEGAGET)"
  done

  read -p "Deseja procurar outro vídeo ? [s/N]" -n 1 -r

  if [[ $REPLY =~ ^[Ss]$ ]]; then
    buscar_video_mega
  else
    exit 0;
  fi
}

buscar_video_mega

exit 0;
